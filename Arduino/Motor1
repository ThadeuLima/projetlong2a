/*
  I2C Pinouts

  SDA -> A4
  SCL -> A5
*/

//Import the library required
#include <Wire.h>

//Slave Address for the Communication
#define SLAVE_ADDRESS 0x04

char number[50];
int numberInt = 0;
String numberString = "";
int motorPin = 6;

//Code Initialization
void setup() {
  // initialize i2c as slave
  Serial.begin(9600);
  Wire.begin(SLAVE_ADDRESS);
  // define callbacks for i2c communication
  Wire.onReceive(receiveData);
  //  Wire.onRequest(sendData);

//---------------------------------------------- Set PWM frequency for D5 & D6 -------------------------------
 
//TCCR0B = TCCR0B & B11111000 | B00000001;    // set timer 0 divisor to     1 for PWM frequency of 62500.00 Hz
  TCCR0B = TCCR0B & B11111000 | B00000010;    // set timer 0 divisor to     8 for PWM frequency of  7812.50 Hz
//TCCR0B = TCCR0B & B11111000 | B00000011;    // set timer 0 divisor to    64 for PWM frequency of   976.56 Hz (The DEFAULT)
//TCCR0B = TCCR0B & B11111000 | B00000100;    // set timer 0 divisor to   256 for PWM frequency of   244.14 Hz
//TCCR0B = TCCR0B & B11111000 | B00000101;    // set timer 0 divisor to  1024 for PWM frequency of    61.04 Hz

  pinMode(LED_BUILTIN, OUTPUT);
  pinMode(motorPin, OUTPUT);
}

void loop() {
  //delay(100);
  
  //if(number[0] = '9'){
  //digitalWrite(LED_BUILTIN, HIGH);   // turn the LED on (HIGH is the voltage level)
  //delay(1000);                       // wait for a second
  //digitalWrite(LED_BUILTIN, LOW);    // turn the LED off by making the voltage LOW
  //delay(1000); 
  //} 

  delay(2000);

  
} // end loop

// callback for received data
void receiveData(int byteCount) {
  int i = 0;
  numberString="";
  //numberInt=0;
  while (Wire.available()) {
    number[i] = Wire.read();
    numberString += String(number[i]);
    i++;
  } // end while

  numberInt = numberString.toInt();
  //number[i] = '\0';
 
  Serial.print(numberString);
  Serial.println("  STRING");
  Serial.print(numberInt);
  Serial.println("  INT");


//FUNCAO PARA TESTAR O MOTOR QUANDO O ENVIO DO NUMERO ACIMA ESTIVER OK
  if (numberInt > 0 && numberInt < 256) {
          analogWrite(motorPin, numberInt);
          Serial.print(numberInt);
        }
        else{
          digitalWrite(motorPin, LOW);
        } 
}  
//End of the program
